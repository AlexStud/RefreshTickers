<#
.SYNOPSIS
Скрипт реализует кэширование цен криптовалютных тикеров с возможностью получения и обновления данных в кэше.

.DESCRIPTION
Этот скрипт содержит две функции для работы с кэшем цен криптовалютных тикеров с поддержкой кэширования на заданный срок.
- Функция `Get-CachedPrice` проверяет, существует ли уже кэш для заданного тикера на выбранной бирже и возвращает цену, если кэш ещё не истек.
- Функция `Update-Cache` обновляет кэш для указанного тикера с новой ценой и сроком кэширования.

.PARAMETER Ticker
Код торговой пары (например: BTCUSDT, ETHUSDT), для которой нужно получить или обновить цену.

.PARAMETER Exchange
Название биржи, с которой связана данная торговая пара (например: Binance, Bybit, MEXC).

.PARAMETER CacheSeconds
Время жизни кэша в секундах (по умолчанию: 30 секунд). Если кэш истек, данные будут запрашиваться заново.

.EXAMPLE
$price = Get-CachedPrice -Ticker "BTCUSDT" -Exchange "Binance" -CacheSeconds 60
Получить цену BTC/USDT с биржи Binance из кэша, если кэш ещё действителен (до 60 секунд).

.EXAMPLE
Update-Cache -Ticker "ETHUSDT" -Exchange "Binance" -Price 2000 -CacheSeconds 60
Обновить кэш для торговой пары ETH/USDT на бирже Binance с новой ценой 2000 и сроком кэширования 60 секунд.

.NOTES
Версия: 1.0.0
Дата обновления: 2025-04-06
Требует: PowerShell 7.0+
#>

# Инициализация глобального кэша для тикеров. Используется для хранения цен на определенный период времени.
$script:TickerCache = @{}

# Функция для получения цены из кэша
function Get-CachedPrice {
    param(
        [string]$Ticker,     # Тикер торговой пары (например: BTCUSDT)
        [string]$Exchange,   # Название биржи (например: Binance)
        [int]$CacheSeconds = 30  # Время жизни кэша в секундах (по умолчанию: 30 секунд)
    )

    # Формируем уникальный ключ для кэша, комбинируя биржу и тикер.
    $cacheKey = "$Exchange-$Ticker"

    # Проверяем, есть ли данные в кэше для данного тикера на выбранной бирже
    if ($script:TickerCache.ContainsKey($cacheKey)) {
        # Если кэш найден, извлекаем его
        $item = $script:TickerCache[$cacheKey]

        # Проверяем, не истек ли срок действия кэша
        if ((Get-Date) -lt $item.Expiry) {
            # Если срок действия кэша ещё не истек, возвращаем цену из кэша
            return $item.Price
        }
    }

    # Если кэша нет или срок действия истек, возвращаем null
    return $null
}

# Функция для обновления данных в кэше
function Update-Cache {
    param(
        [string]$Ticker,     # Тикер торговой пары (например: BTCUSDT)
        [string]$Exchange,   # Название биржи (например: Binance)
        [double]$Price,      # Цена, которую нужно сохранить в кэше
        [int]$CacheSeconds = 30  # Время жизни кэша в секундах (по умолчанию: 30 секунд)
    )

    # Формируем уникальный ключ для кэша, комбинируя биржу и тикер
    $cacheKey = "$Exchange-$Ticker"

    # Обновляем или создаем запись в кэше с новой ценой и временем истечения
    $script:TickerCache[$cacheKey] = @{
        Price  = $Price                    # Сохраняем цену
        Expiry = (Get-Date).AddSeconds($CacheSeconds)  # Устанавливаем время истечения кэша
    }
}
